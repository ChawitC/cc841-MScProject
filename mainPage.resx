<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="gradiantPictureBox.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABMAAAE7CAIAAACwui10AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAAwVJREFUeF6d2hF3EAAAReFHURSNRtEoikajKIpGo9FoNIpG0SiKRqMoikajURSN
        RlEU7ZyXX7rnnfPJ/Q83zYjtpa9GbC99PWJ76ZsR20sPRmwvPRyxvfTtKD0asb303Yjtpe9HbC89HrG9
        9GTE9tIPI7aXfhyln0ZsLz0dsb30bMT20vMR20svRmwvvRylVyO2l34esb30esT20i8jtpfejNhe+nWU
        fhuxvfR2xPbSuxHbS7+P2F76Y8T20p8jtpfej9KHEdtLH0dsL/01Ynvp7xHbS59GbC99HqV/Rmwv/Tti
        e+m/EdtLX0ZsLy8dsb3864jt5W9H+dMR28tzR2wvTx2xvfzuiO3lV0dsL48d5aEjtpf7jthefnbE9vKj
        I7aX7x2xvdx1lNuO2F6+dcT28rUjtpebjthevnTE9nLdEdvL545y1RHby2VHbC8XHbG9nHfE9nLWEdvL
        aUf51BHby8eO2F4+dMT2ctIR28txR2wv7zvKu47YXo46Ynt52xHby2FHbC8HHbG9vOmI7eV1R3nVEdsL
        dxmP7XGX8dgedxmP7XGX8dgedxmP04vH9rjLeGyPu4zH9rjLeGyPu4zH9rjLeGyPu4zH6cVje9xlPLbH
        XcZje9xlPLbHXcZje9xlPE4vHtvjLuOxPe4yHtvjLuOxPe4yHtvjLuNxevHYHncZj+1xl/HYHncZj+1x
        l/HYHncZj+1xl/E4vXhsj7uMx/a4y3hsj7uMx/a4y3hsj7uMx+nFY3vcZTy2x13GY3vcZTy2x13GY3vc
        ZTxOLx7b4/TisT3uMh7b4y7jsT3uMh7b4y7jsb1gl/E4vXhsj7uMx/a4y3hsj7uMx/a4y3hsj7uMx+nF
        Y3vBLuOxPe4yHtvjLuOxPe4yHtvjLuOxPe4yHqcXj+1xl/HYHncZj+1xl/HYHncZj+1xl/E4vXhsj7uM
        x/a4y3hsj7uMx/a4y3hsj7uMx+nFY3vcZTy2x13GY3vcZTy2x13GY3vcZTy2x13G4/TisT3uMh7b4y7j
        sb1wl3HS/+iW4IIeuK42AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="gradiantPictureBox.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABMAAAE7CAYAAAA/2LojAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wAAADsABataJCQAAA1hJREFUeF613B+Q8lEUxvEoiqJoaWkpiqKlaKVoKYqiKIqipShaWlpaiqIoiqIo
        iqIoaqb3mXv1yHvm+8zOd+Yc+czO7L+6vzvbGA6Hz0bjyVSwpgYiHmtpIOKxtgYiHutoICrYiwYiHnvV
        QMRjbxqIeKyrgYjHehqIeKyvgYjH3jUQFWyggYjHPjQQ8dhIAxGPfWog4rGxBiIem2ggKthUAxGPzTQQ
        8dhcAxGPLTQQ8dhSAxGPfWkgKthKAxGPrTUQ8di3BiIe+9FAxGO/Goh47E8DEY9tNBAVbKuBiMd2Goh4
        bK+BiMcOGoh47KiBiMdOGogKdtZAxGMXDUQ8dtVAxGM3DUQ8dtdAxGMPDUQ89nwwVezOZMBuTAbsymTA
        LkwG7MxkwE5MFTsyGbADkwHbMxmwHZMB2zIZsA1Txf6YDNgvkwH7YTJg30wGbM1kwFZMBuyLqWJLJgO2
        YDJgcyYDNmMyYFMmAzZhqtiYyYB9MhmwEZMB+2AyYAMmA/bOVLE+kwHrMRmwLpMBe2MyYK9MBuyFyYB1
        mCrWZjJgLSYD1mQyYNAHjgWfcCoeC77IqQoWfC+n4rHg5z8VjwW/5lLxWPCnIRWPBX9OU/FY8BIkFY8F
        L9tSFSx4dZqKx4JX9Kl4LHjjkorHgjd7qXgseIOciseCQ4VUBQvOTlLxWHDelIrHgmO1VDwWHEWm4rHg
        +DYVjwVH3qkKFpzsp+Kx4GlIKh4LHvqk4rHgQVkqHgseLqbiseCBbCoeCx5ipypY8Kw+FY8F9xtS8Vhw
        jSMVjwVXX1LxWHBdKBWPBVesUhUsuEmWiseC23epeCy4ZJiKx4KLmal4LLjMmorHggvAqQoW3HNOxWPB
        3fBUPPZ8NJAM2F0LkAG7aQEyYFctQAbsogWoYmctQAbspAXIgB21ABmwgxYgA7bXAmTAdlqAKrbVAmTA
        NlqADNifFiAD9qsFyID9aAEyYN9agAzYWgtQxVZagAzYlxYgA7bUAmTAFlqADNhcC5ABm2kBqthUC5AB
        m2gBMmBjLUAG7FMLkAEbaQEyYB9agCo20AJkwN61ABmwvhYgA9bTAmTAulqADNibFiAD9qoFqGIvWoAM
        WEcLkAFrawEyYC0tQAasqQXIgIX/8f3/KxjT8PkPBgOHoLZbdycAAAAASUVORK5CYII=
</value>
  </data>
</root>